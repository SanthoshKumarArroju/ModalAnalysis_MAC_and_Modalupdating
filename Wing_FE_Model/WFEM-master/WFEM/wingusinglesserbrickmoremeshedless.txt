variables
%All of these actions are not the most efficient for this problem.
t1=35
t2=32.9
t3=30.521429
t4=27.864287
t5=24.928574
t6=21.71429
t7=18.221435
h=1778
b=63.61
l=285.94

element properties
% Beam format
% E G rho 
7.308e7 2.747e7 2.71e-6 
%aluminum(1:3)

%Note that these were defined above. I can use variables in my input file.
% I also used "steel" as a property. WFEM has some of these predefined. 
% Run "units" and type "who" to see variables/values available inside your
% input file
brick8_SL elements
%node1 node2 node3 pointnum (beam properties number)
5 4 1 2 23 22 19 20 1 1
8 7 4 5 26 25 22 23 1 1
11 10 7 8 29 28 25 26 1 1
14 13 10 11 32 31 28 29 1 1
17 16 13 14 35 34 31 32 1 1
18 17 14 15 36 35 32 33 1 1 
15 14 11 12 33 32 29 30 1 1
12 11 8 9 30 29 26 27 1 1
9 8 5 6 27 26 23 24 1 1
6 5 2 3 24 23 20 21 1 1

nodes
% I can include comment lines
% node num, x y z, Node number isn't ever stored in nodes matrix
1	0 0 0
2	l/2 0 0
3       l/2 h/5 0
4       b/5 h/5 0
5       0 0 t1
6       l/2 0 t1
7       l/2 h/5 t2
8       b/5 h/5 t2
9	l 0 0
10       l-(b/5) h/5 0
11      l 0 t1 
12       l-(b/5) h/5 t2
13       2*(b/5) 2*(h/5) 0
14       l/2 2*(h/5) 0
15       2*(b/5) 2*(h/5) t3
16       l/2 2*(h/5) t3
17       l-(2*(b/5)) 2*(h/5) 0
18      l-(3*(b/5)) 3*(h/5) 0
19       l-(2*(b/5)) 2*(h/5) t3
20      l-(3*(b/5)) 3*(h/5) t4
21      l/2 3*(h/5) 0
22      3*(b/5) 3*(h/5) 0
23      l/2 3*(h/5) t4
24      3*(b/5) 3*(h/5) t4
25      4*(b/5) 4*(h/5) 0
26      l/2 4*(h/5) 0 
27      l/2 5*(h/5) 0
28      5*(b/5) 5*(h/5) 0
29      4*(b/5) 4*(h/5) t5
30      l/2 4*(h/5) t5 
31      l/2 5*(h/5) t6
32      5*(b/5) 5*(h/5) t6
33      l-(4*(b/5)) 4*(h/5) 0
34      l-(5*(b/5)) 5*(h/5) 0
35      l-(4*(b/5)) 4*(h/5) t5
36      l-(5*(b/5)) 5*(h/5) t6
    


% need to figure out what this block is for
points
1 1 1 1

fix clamp
1
2
5
6
9
11
% The preceeding put a clamp boundary condition on node 1.


%fix rod
%1 2 1
%2 3 1
%4 5 1
%5 6 1
%7 8 1
%8 9 1
%10 11 1
%11 12 1

load 
% Node DOF Force
%10 3 -10
%11 3 -10
%12 3 -10
%16 3 -10


actions
modalanalysis
who
fs %dump sorted natural frequencies to the screen
% The stuff inside actions is simply executed at the wfem prompt. Any
% Matlab command can also be executed here. For example, you could double
% the mass matrix then do another modal analysis. 
% This will display natural frequencies and prompt for mode shape display
%if uncommented
modalreview
fsold=fs %Let's store them for later comparison
M=M/4; %Dividing M by 4 should double the natural frequencies
fs=[]; % WFEM won't run another modal analysis unless I force it to 
%It's smart enough to know that it has already been done, so I need to 
%clear the results to it is forced to regenerate them with another
%modalanalysis.
modalanalysis
disp('Natural Frequencies in KHz')
fprintf('%7.3f %7.3f\n',[fsold'; fs'])
disp('See, the natural frequency doubled as expected') % I wrote this out 
%to the output for the user to read after execution.
% Uncommenting this line will cause an exit from WFEM immediately after 
% execution
%end
%Let's do static analysis
staticanalysis
plotdeformed
%Here are the %%displacements, X
%X
%[totalmass,INERTIATENSOR,CG]=FINDINERTIA
K
Kr
M
Mr

