variables
%All of these actions are not the most efficient for this problem.
t1=35
t2=30
t3=25
h=1778.01
b=63.61
l=285.94
%l=5
Ixx1=1/12*t1^4
Ixx2=1/12*t1^4
Iyy1=Ixx1
Iyy2=Ixx2
J1=0.95*(Ixx1+Iyy1)
J2=0.95*(Ixx2+Iyy2)
Ixx3=1/12*t2^4
Ixx4=1/12*t2^4
Iyy3=Ixx3
Iyy4=Ixx4
J3=0.95*(Ixx3+Iyy3)
J4=0.95*(Ixx4+Iyy4)
Ixx5=1/12*t3^4
Ixx6=1/12*t3^4
Iyy5=Ixx5
Iyy6=Ixx6
J5=0.95*(Ixx5+Iyy5)
J6=0.95*(Ixx6+Iyy6)

element properties
% Beam format
% E G rho A1     A2       A3   J1 J2 J3 Ixx1 Ixx2 Ixx3 Iyy1 Iyy2 Iyy3
7.308e7 2.747e7 2.71e-6 t1^2 t1^2 J1 J2 Ixx1 Ixx2 Iyy1 Iyy2
7.308e7 2.747e7 2.71e-6 t2^2 t2^2 J3 J4 Ixx3 Ixx4 Iyy3 Iyy4
7.308e7 2.747e7 2.71e-6 t3^2 t3^2 J5 J6 Ixx5 Ixx6 Iyy5 Iyy6
%Note that these were defined above. I can use variables in my input file.
% I also used "steel" as a property. WFEM has some of these predefined. 
% Run "units" and type "who" to see variables/values available inside your
% input file

beam2_project1 elements
%node1 node2 node3 pointnum (beam properties number)
1 2 1 1
2 3 1 1
1 4 1 1
2 5 1 1
3 6 1 1
4 5 1 1
5 6 1 1
4 7 1 2
5 8 1 2
6 9 1 2
7 8 1 2
8 9 1 2
7 10 1 3
8 11 1 3
9 12 1 3
10 11 1 3
11 12 1 3

%rod3 elements
%1 2 1
%2 3 1
%4 5 1
%5 6 1
%7 8 1
%8 9 1
%10 11 1
%11 12 1

nodes
% I can include comment lines
% node num, x y z, Node number isn't ever stored in nodes matrix
1	0 0 0
2	l/2 0 0
3	l 0 0
4	b/3 h/3 0
5	l/2 h/3 0
6	l-(b/3) h/3 0
7	b/1.5 h/1.5 0
8	l/2 h/1.5 0
9	l-(b/1.5) h/1.5 0
10	b h 0
11	l/2 h 0
12	l-b h 0


% need to figure out what this block is for
points
1 1 1 1

fix clamp
1
2
3

% The preceeding put a clamp boundary condition on node 1.

fix surfaceball
4 1 1 0
5 1 1 0
6 1 1 0
7 1 1 0
8 1 1 0
9 1 1 0
10 1 1 0
11 1 1 0
12 1 1 0

%fix rod
%1 2 1
%2 3 1
%4 5 1
%5 6 1
%7 8 1
%8 9 1
%10 11 1
%11 12 1

load 
% Node DOF Force
%10 3 -10
%11 3 -10
%12 3 -10
%16 3 -10


actions
modalanalysis
who
fs %dump sorted natural frequencies to the screen
% The stuff inside actions is simply executed at the wfem prompt. Any
% Matlab command can also be executed here. For example, you could double
% the mass matrix then do another modal analysis. 
% This will display natural frequencies and prompt for mode shape display
%if uncommented
modalreview
fsold=fs %Let's store them for later comparison
M=M/4; %Dividing M by 4 should double the natural frequencies
fs=[]; % WFEM won't run another modal analysis unless I force it to 
%It's smart enough to know that it has already been done, so I need to 
%clear the results to it is forced to regenerate them with another
%modalanalysis.
modalanalysis
disp('Natural Frequencies in KHz')
fprintf('%7.3f %7.3f\n',[fsold'; fs'])
disp('See, the natural frequency doubled as expected') % I wrote this out 
%to the output for the user to read after execution.
% Uncommenting this line will cause an exit from WFEM immediately after 
% execution
%end
%Let's do static analysis
staticanalysis
plotdeformed
%Here are the %%displacements, X
%X
