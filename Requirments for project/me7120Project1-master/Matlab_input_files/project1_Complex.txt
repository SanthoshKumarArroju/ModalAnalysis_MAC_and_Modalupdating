variables
%All of these actions are not the most efficient for this problem.
t=0.05
l=5
Ixx1=1/12*t^4
Ixx2=1/12*t^4
Iyy1=Ixx1
Iyy2=Ixx2
J1=0.95*(Ixx1+Iyy1)
J2=0.95*(Ixx2+Iyy2)

element properties
% Beam format
% E G rho A1     A2       A3   J1 J2 J3 Ixx1 Ixx2 Ixx3 Iyy1 Iyy2 Iyy3
steel    t^2 t^2 J1 J2 Ixx1 Ixx2 Iyy1 Iyy2
%Note that these were defined above. I can use variables in my input file.
% I also used "steel" as a property. WFEM has some of these predefined. 
% Run "units" and type "who" to see variables/values available inside your
% input file

beam2_project1 elements
%node1 node2 node3 pointnum (beam properties number)
1 2 1 1
3 4 1 1
5 6 1 1
7 8 1 1
1 4 1 1
3 6 1 1
5 8 1 1
1 9 1 1
3 11 1 1
5 13 1 1
7 15 1 1
1 11 1 1
3 13 1 1
5 15 1 1
9 10 1 1
11 12 1 1
13 14 1 1
15 16 1 1
10 11 1 1
12 13 1 1
14 15 1 1
10 2 1 1
12 4 1 1
14 6 1 1
16 8 1 1
4 10 1 1
6 12 1 1
8 14 1 1
1 3 1 1
3 5 1 1
5 7 1 1
2 4 1 1
4 6 1 1
6 8 1 1
9 11 1 1
11 13 1 1
13 15 1 1
10 12 1 1
12 14 1 1
14 16 1 1

nodes
% I can include comment lines
% node num, x y z, Node number isn't ever stored in nodes matrix
1 0 l l 
2 0 l 0 
3 l l-2*l*sin(pi/72) l-2*l*sin(pi/72)
4 l l-2*l*sin(pi/72) l*sin(pi/72)
5 2*l l-4*l*sin(pi/72) l-4*l*sin(pi/72)
6 2*l l-4*l*sin(pi/72) 2*l*sin(pi/72)
7 3*l l-6*l*sin(pi/72) l-6*l*sin(pi/72) 
8 3*l l-6*l*sin(pi/72) 3*l*sin(pi/72)
9 0 0 l 
10 0 0 0 
11 l l*sin(pi/72) l-2*l*sin(pi/72)
12 l l*sin(pi/72) l*sin(pi/72)
13 2*l 2*l*sin(pi/72) l-4*l*sin(pi/72)
14 2*l 2*l*sin(pi/72) 2*l*sin(pi/72)
15 3*l 3*l*sin(pi/72) l-6*l*sin(pi/72) 
16 3*l 3*l*sin(pi/72) 3*l*sin(pi/72)

% need to figure out what this block is for
points
1 1 1 1

fix clamp
1
2
9
10
% The preceeding put a clamp boundary condition on node 1.

%fix pin
%2 0 0 1
%10 0 0 1

load 
% Node DOF Force
7 3 -10
8 3 -10
15 3 -10
16 3 -10


actions
modalanalysis
who
fs %dump sorted natural frequencies to the screen
% The stuff inside actions is simply executed at the wfem prompt. Any
% Matlab command can also be executed here. For example, you could double
% the mass matrix then do another modal analysis. 
% This will display natural frequencies and prompt for mode shape display
%if uncommented
%modalreview
fsold=fs %Let's store them for later comparison
M=M/4; %Dividing M by 4 should double the natural frequencies
fs=[]; % WFEM won't run another modal analysis unless I force it to 
%It's smart enough to know that it has already been done, so I need to 
%clear the results to it is forced to regenerate them with another
%modalanalysis.
modalanalysis
disp('Natural Frequencies in KHz')
fprintf('%7.3f %7.3f\n',[fsold'; fs'])
disp('See, the natural frequency doubled as expected') % I wrote this out 
%to the output for the user to read after execution.
% Uncommenting this line will cause an exit from WFEM immediately after 
% execution
%end
%Let's do static analysis
staticanalysis
plotdeformed
%Here are the displacements, X
X
